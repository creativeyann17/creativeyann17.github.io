[
  {
    "date": "2021-03-14",
    "title": "Initial release",
    "description": "Hello! It's has been a busy week coding the skeleton of the web-site with React and trying to have something that work. Good news is it's done and it works properly! Now it's time to improve and write some articles."
  },
  {
    "date": "2021-03-16",
    "title": "Goodbye CSS ...",
    "description": "I just discovered that Bootstrap provides pre-defined classnames that can set margin / padding without putting any CSS styles and be responsive at the same time! No need to say I updated the entire components and reduced the amount of CSS by a lot."
  },
  {
    "date": "2021-03-21",
    "title": "New article: Spring-boot-jwt-ready",
    "description": "I'm kind of proud of this article because it summarizes lot of work done under the hood to have a spring-boot application that manage JWT out of the box. Moreover it includes Undertow, JPA, global error handling and more ... I'm happy :)"
  },
  {
    "date": "2021-03-21",
    "title": "New feature: table of contents in articles",
    "description": "After hours of Googling I didn't find the secret receipt that will work with my current Markdown implementation. Still there is a way to add custom anchor when a header is displayed so I made a small computation of that, pushing every anchor in the reducer when the article has one; React doesn't like the solution because it dispatch action during rendering, will see later how to do that better."
  },
  {
    "date": "2021-03-22",
    "title": "New feature: article count of views",
    "description": "When reading an article the web-site will increase by one (if never read before) or get the count of views of the article. Every others current online users will be notified by websocket of the change in realtime. The web-site will remember if the article has been read before or not by storing a value in thr browser local storage."
  },
  {
    "date": "2021-03-22",
    "title": "New feature: websocket + article",
    "article": "websocket-redux-saga",
    "description": "The web-site will connect to the API websocket service with the possibility to retry after a delay for an amount of max attempts. This feature uses a classic javascript websocket object embedded inside a redux/saga."
  },
  {
    "date": "2021-03-22",
    "title": "Update web-site design",
    "description": "After watching some Youtube videos it becomes clear that the site need some kind of makeover in term of UI/UX because it looks to much like default Bootstrap design. It's done, with new font, reworked header, a dedicated About page + news feed, rework article structure and more ..."
  },
  {
    "date": "2021-03-25",
    "title": "Add GraphQL support + article",
    "article": "micronaut-graphql-react",
    "description": "Proof of concept that the API can be used with GraphQL queries/mutations from the front-end using Apollo/Client. The result is satisfying and highlights this fact: using Hooks (context) + GraphQL may nullify the need of Redux + Saga. To be remember for my next React project."
  },
  {
    "date": "2021-03-28",
    "title": "Google Cloud App Engine + article",
    "article": "micronaut-app-engine",
    "description": "Time to play with the (limitless?) cloud features starting with Google Cloud. My plan is to migrate the existing Heroku API into App Engine using Firestore as database instead of PostgreSQL and see how to replace the websocket if possible."
  },
  {
    "date": "2021-04-03",
    "title": "New feature: article likes",
    "description": "Users have now the ability to like an article. Same as count of views, this feature uses websocket to be notified if another user liked the article too. Users can't like the same article twice and this state is saved in local storage (nothing on the server side)."
  },
  {
    "date": "2021-04-04",
    "title": "Full GraphQL integration with Redux/Saga",
    "description": "After some difficulties with @apollo/client and the useQuery/useLazyQuery/useMutation hooks I decided to perform the GraphQL queries inside the saga directly. It also give me the possibility to switch between REST and GraphQL which is a feature I wanted since the beginning as a proof of concept."
  },
  {
    "date": "2021-04-05",
    "title": "New article: docker-image-api",
    "article": "create-docker-image-api",
    "description": "Create a Dockerfile with the build and run instructions for your java API and improve your deployments with containers."
  },
  {
    "date": "2021-11-30",
    "title": "New article: minimal-secret-santa",
    "article": "minimal-secret-santa",
    "description": "Hello! Today I'm really happy to feature a little implementation of a command line secret santa. This program is made in Scala (yesss that's a new skill yeahhh!) and PicoCLI library that is really fun to use, it's full of nice features and simplify a lot any script/program that may be in need of parameters."
  },
  {
    "date": "2022-04-02",
    "title": "New article: localstack-docker-compose",
    "article": "localstack-docker-compose",
    "description": "In this article we are exploring a solution to manage the complexity of working with a local environment with your custom data while writing your code."
  },
  {
    "date": "2022-12-05",
    "title": "New article: Secret-Santa CLI in GO with the help of ChatGPT",
    "article": "minimal-secret-santa-go",
    "description": "After having my twitter been flooded with ChatGPT references all over the weekend, I had to investigate if all these new AI tools are really worth it or not."
  },
  {
    "date": "2023-01-23",
    "title": "Migration: the website has been moved to AWS",
    "description": "The views/likes features were un-available since few months due to previous provider reduction of costs of their free plan. Took me a while but the site is now under AWS and all the previous API/WebSocket is replaced with data driven-events"
  },
  {
    "date": "2023-01-28",
    "title": "Full AWS ECS React starter with CI/CD/release pipelines",
    "article": "cy17-starter-react-app",
    "description": "Successfully built a React App. starter that deploy into AWS cloud for both dev/prod envs using github actions CI/CD/release"
  }
]
