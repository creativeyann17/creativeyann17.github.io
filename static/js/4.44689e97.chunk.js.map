{"version":3,"sources":["components/CodeBlock.jsx","components/Markdown.jsx","pages/Article.jsx"],"names":["CodeBlock","language","value","style","duotoneSea","Markdown","props","state","text","fetch","this","source","then","response","setState","className","renderers","code","Component","connect","articles","getArticles","id","useParams","useState","timeout","setstate","article","find","toString","useEffect","timeoutTimer","setTimeout","GLOBAL_REQUEST_TIMEOUT","clearTimeout","Container","description","ArticleDetails","SocialIcons","alt","thumbnail","src","THUMBAILS_FOLDER","width","height","ARTICLES_FOLDER","markdown","Alert","variant","Spinner","animation","size"],"mappings":"mUAaeA,EARG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,MAC7B,OACE,cAAC,IAAD,CAAmBD,SAAUA,EAAUE,MAAOC,IAA9C,SACGF,KCuBQG,E,kDAzBb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CAAEC,KAAM,MAFJ,E,qDAKnB,WAAqB,IAAD,OAClBC,MAAMC,KAAKJ,MAAMK,QACdC,MAAK,SAACC,GACL,OAAOA,EAASL,UAEjBI,MAAK,SAACJ,GACL,EAAKM,SAAS,CAAEN,c,oBAItB,WAAU,IACAA,EAASE,KAAKH,MAAdC,KACR,OACE,qBAAKO,UAAU,WAAf,SACGP,GAAQ,cAAC,IAAD,CAAeG,OAAQH,EAAMQ,UAAW,CAAEC,KAAMjB,W,GApB1CkB,a,yBC+DRC,uBANS,SAACZ,GACvB,MAAO,CACLa,SAAUC,YAAYd,MAIXY,EAzDC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACTE,EAAOC,cAAPD,GADwB,EAENE,mBAAS,CAAEC,SAAS,IAFd,mBAEzBlB,EAFyB,KAElBmB,EAFkB,KAI1BC,EAAUC,IAAKR,GAAU,SAACO,GAAD,OAAaA,EAAQL,GAAGO,aAAeP,KAYtE,OAVAQ,qBAAU,WACR,IAAIC,EAAeC,YACjB,kBAAMN,EAAS,2BAAKnB,GAAN,IAAakB,SAAS,OACX,IAAzBQ,KAEF,OAAO,WACLC,aAAaH,OAKf,cAACI,EAAA,EAAD,CAAWpB,UAAU,oBAArB,SACIY,EAaA,gCACE,6BAAKA,EAAQS,cACb,sBAAKrB,UAAU,iCAAf,UACE,cAACsB,EAAA,EAAD,CAAgBV,QAASA,IACzB,cAACW,EAAA,EAAD,CAAaX,QAASA,OAExB,qBACEZ,UAAU,OACVwB,IAAKZ,EAAQa,UACbC,IAAG,UAAKC,IAAL,YAAyBf,EAAQa,WACpCG,MAAO,OACPC,OAAQ,SAET,cAAC,EAAD,CAAUjC,OAAM,UAAKkC,IAAL,YAAwBlB,EAAQmB,eAzBnD,8BACGvC,EAAMkB,QACL,eAACsB,EAAA,EAAD,CAAOC,QAAQ,SAAf,UACE,mDADF,IAC6B1B,KAG7B,eAACyB,EAAA,EAAD,CAAOC,QAAQ,YAAf,UACE,qDADF,IAC+B1B,EAD/B,IACmC,cAAC2B,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK","file":"static/js/4.44689e97.chunk.js","sourcesContent":["import React from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/master/AVAILABLE_STYLES_PRISM.MD\nimport { duotoneSea } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nconst CodeBlock = ({ language, value }) => {\n  return (\n    <SyntaxHighlighter language={language} style={duotoneSea}>\n      {value}\n    </SyntaxHighlighter>\n  );\n};\n\nexport default CodeBlock;\n","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport CodeBlock from './CodeBlock';\n\n// using component for fun :)\nclass Markdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: null };\n  }\n\n  componentDidMount() {\n    fetch(this.props.source)\n      .then((response) => {\n        return response.text();\n      })\n      .then((text) => {\n        this.setState({ text });\n      });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"markdown\">\n        {text && <ReactMarkdown source={text} renderers={{ code: CodeBlock }} />}\n      </div>\n    );\n  }\n}\n\nexport default Markdown;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Spinner, Alert } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport find from 'lodash/find';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport Markdown from '../components/Markdown';\nimport ArticleDetails from '../components/ArticleDetails';\nimport SocialIcons from '../components/SocialIcons';\nimport { ARTICLES_FOLDER, THUMBAILS_FOLDER, GLOBAL_REQUEST_TIMEOUT } from '../constants';\n\nconst Article = ({ articles }) => {\n  const { id } = useParams();\n  const [state, setstate] = useState({ timeout: false });\n\n  const article = find(articles, (article) => article.id.toString() === id); // number != string\n\n  useEffect(() => {\n    let timeoutTimer = setTimeout(\n      () => setstate({ ...state, timeout: true }),\n      GLOBAL_REQUEST_TIMEOUT * 1000\n    );\n    return () => {\n      clearTimeout(timeoutTimer);\n    };\n  });\n\n  return (\n    <Container className=\"page page-article\">\n      {!article ? (\n        <div>\n          {state.timeout ? (\n            <Alert variant=\"danger\">\n              <b>Article not found:</b> {id}\n            </Alert>\n          ) : (\n            <Alert variant=\"secondary\">\n              <b>Looking for article:</b> {id} <Spinner animation=\"border\" size=\"sm\" />\n            </Alert>\n          )}\n        </div>\n      ) : (\n        <div>\n          <h1>{article.description}</h1>\n          <div className=\"d-flex justify-content-between\">\n            <ArticleDetails article={article} />\n            <SocialIcons article={article} />\n          </div>\n          <img\n            className=\"mb-3\"\n            alt={article.thumbnail}\n            src={`${THUMBAILS_FOLDER}/${article.thumbnail}`}\n            width={'100%'}\n            height={'auto'}\n          />\n          {<Markdown source={`${ARTICLES_FOLDER}/${article.markdown}`} />}\n        </div>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Article);\n"],"sourceRoot":""}