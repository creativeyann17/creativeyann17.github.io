{"version":3,"sources":["../node_modules/lodash/toInteger.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/includes.js","../node_modules/lodash/isString.js","../node_modules/lodash/values.js","../node_modules/lodash/_baseValues.js","../node_modules/lodash/filter.js","../node_modules/lodash/_baseFilter.js","pages/Search.jsx"],"names":["toFinite","require","module","exports","value","result","remainder","toNumber","INFINITY","baseTrim","isObject","isSymbol","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","other","valueOf","isBinary","test","slice","baseIndexOf","isArrayLike","isString","toInteger","values","nativeMax","Math","max","collection","fromIndex","guard","length","indexOf","baseGetTag","isArray","isObjectLike","baseValues","keys","object","arrayMap","props","key","arrayFilter","baseFilter","baseIteratee","predicate","baseEach","index","push","connect","state","articles","getArticles","filter","useParams","articlesFiltered","_filter","article","includes","tags","className","variant","map","md","lg","id"],"mappings":"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","file":"static/js/4.6ee007f6.chunk.js","sourcesContent":["var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n","var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n","var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n","var baseIndexOf = require('./_baseIndexOf'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    toInteger = require('./toInteger'),\n    values = require('./values');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nmodule.exports = includes;\n","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nmodule.exports = isString;\n","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;\n","var arrayMap = require('./_arrayMap');\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;\n","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;\n","var baseEach = require('./_baseEach');\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;\n","import React from 'react';\nimport { Container, Row, Alert } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport includes from 'lodash/includes';\nimport _filter from 'lodash/filter';\nimport map from 'lodash/map';\nimport { Col } from 'react-bootstrap';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport ArticleCard from '../components/ArticleCard';\n\nconst Search = ({ articles }) => {\n  const { filter } = useParams();\n  const articlesFiltered = _filter(articles, (article) => {\n    return includes(article.tags, filter);\n  });\n  const renderArticle = (article) => (\n    <Col md={4} lg={3} key={article.id}>\n      <ArticleCard key={article.id} article={article} />\n    </Col>\n  );\n  return (\n    <Container className=\"page page-search\">\n      {filter && (\n        <Alert variant=\"secondary\">\n          <b>Actual search:</b> {filter} <b>result(s): </b> {articlesFiltered.length}\n        </Alert>\n      )}\n      <Row>{map(articlesFiltered, renderArticle)}</Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Search);\n"],"sourceRoot":""}