{"version":3,"sources":["pages/Article.jsx"],"names":["connect","state","articles","getArticles","dispatch","setSelectedArticle","article","articlesSetSelected","id","useParams","useState","timeout","setState","find","toString","useEffect","timeoutTimer","setTimeout","GLOBAL_REQUEST_TIMEOUT","clearTimeout","thumbnailUrl","THUMBNAILS_FOLDER","thumbnail","className","replace","RegExp","name","property","content","description","lg","alt","src","width","height","showViews","showLikes","source","ARTICLES_FOLDER","markdown","variant","animation","size"],"mappings":"iVA+FeA,uBAZS,SAACC,GACvB,MAAO,CACLC,SAAUC,YAAYF,GAEzB,IAE0B,SAACG,GAC1B,MAAO,CACLC,mBAAoB,SAACC,GAAD,OAAaF,EAASG,YAAoBD,GAA1C,EAEvB,GAEcN,EAjFC,SAAC,GAAsC,IAApCE,EAAmC,EAAnCA,SAAUG,EAAyB,EAAzBA,mBACnBG,EAAOC,cAAPD,GAD4C,EAE1BE,mBAAS,CAAEC,SAAS,IAFM,mBAE7CV,EAF6C,KAEtCW,EAFsC,KAI9CN,EAAUO,IAAKX,GAAU,SAACI,GAAD,OAAaA,EAAQE,GAAGM,aAAeN,CAAvC,IAE/BO,qBAAU,WACR,IAAIC,EAAeC,YACjB,kBAAML,EAAS,2BAAKX,GAAN,IAAaU,SAAS,IAApC,GACyB,IAAzBO,KAOF,OAJIZ,IAA6B,IAAlBL,EAAMU,SACnBN,EAAmBC,EAAQE,IAGtB,WACLW,aAAaH,EACd,CACF,IAED,IAAMI,EAAed,EAAO,UAAMe,IAAN,YAA2Bf,EAAQgB,WAAc,GAE7E,OACE,cAAC,IAAD,CAAWC,UAAU,oBAArB,SACIjB,EAaA,gCACE,eAAC,IAAD,WACE,gCAAQkB,IAAQlB,EAAQE,GAAI,IAAIiB,OAAO,IAAK,KAAM,OAClD,sBAAMC,KAAK,QAAQC,SAAS,WAAWC,QAASR,IAChD,sBAAMM,KAAK,cAAcC,SAAS,iBAAiBC,QAAStB,EAAQuB,iBAEtE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,EAAT,UACE,eAAC,IAAD,WACE,qBACEP,UAAU,OACVQ,IAAKzB,EAAQgB,UACbU,IAAKZ,EACLa,MAAO,OACPC,OAAQ,SAEV,sBAAKX,UAAU,kCAAf,UACE,cAAC,IAAD,CAAgBjB,QAASA,EAAS6B,WAAS,EAACC,WAAS,IACrD,cAAC,IAAD,CAAa9B,QAASA,UAG1B,cAAC,IAAD,OAEF,cAAC,IAAD,CAAKwB,GAAI,EAAT,SAAa,cAAC,IAAD,CAAUO,OAAM,UAAKC,IAAL,YAAwBhC,EAAQiC,oBAnCjE,8BACGtC,EAAMU,QACL,eAAC,IAAD,CAAO6B,QAAQ,UAAf,UACE,mDADF,IAC6BhC,KAG7B,eAAC,IAAD,CAAOgC,QAAQ,QAAf,UACE,qDADF,IAC+BhC,EAD/B,IACmC,cAAC,IAAD,CAASiC,UAAU,SAASC,KAAK,aAkC/E,G","file":"static/js/5.dfff4ac2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Spinner, Alert, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport find from 'lodash/find';\nimport { Helmet } from 'react-helmet';\nimport FadeIn from 'react-fade-in';\nimport replace from 'lodash/replace';\nimport { TableOfContents } from '../components';\nimport { articlesSetSelected } from '../services/ArticlesService/actions';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport { Markdown, ArticleDetails, SocialIcons } from '../components';\nimport { ARTICLES_FOLDER, THUMBNAILS_FOLDER, GLOBAL_REQUEST_TIMEOUT } from '../constants';\n\nconst Article = ({ articles, setSelectedArticle }) => {\n  const { id } = useParams();\n  const [state, setState] = useState({ timeout: false });\n\n  const article = find(articles, (article) => article.id.toString() === id); // number != string\n\n  useEffect(() => {\n    let timeoutTimer = setTimeout(\n      () => setState({ ...state, timeout: true }),\n      GLOBAL_REQUEST_TIMEOUT * 1000\n    );\n\n    if (article && state.timeout === false) {\n      setSelectedArticle(article.id);\n    }\n\n    return () => {\n      clearTimeout(timeoutTimer);\n    };\n  });\n\n  const thumbnailUrl = article ? `${THUMBNAILS_FOLDER}/${article.thumbnail}` : '';\n\n  return (\n    <Container className=\"page page-article\">\n      {!article ? (\n        <div>\n          {state.timeout ? (\n            <Alert variant=\"warning\">\n              <b>Article not found:</b> {id}\n            </Alert>\n          ) : (\n            <Alert variant=\"light\">\n              <b>Looking for article:</b> {id} <Spinner animation=\"border\" size=\"sm\" />\n            </Alert>\n          )}\n        </div>\n      ) : (\n        <div>\n          <Helmet>\n            <title>{replace(article.id, new RegExp('-', 'g'), ' ')}</title>\n            <meta name=\"image\" property=\"og:image\" content={thumbnailUrl} />\n            <meta name=\"description\" property=\"og:description\" content={article.description} />\n          </Helmet>\n          <Row>\n            <Col lg={4}>\n              <FadeIn>\n                <img\n                  className=\"mb-3\"\n                  alt={article.thumbnail}\n                  src={thumbnailUrl}\n                  width={'100%'}\n                  height={'auto'}\n                />\n                <div className=\"d-flex justify-content-between \">\n                  <ArticleDetails article={article} showViews showLikes />\n                  <SocialIcons article={article} />\n                </div>\n              </FadeIn>\n              <TableOfContents />\n            </Col>\n            <Col lg={8}>{<Markdown source={`${ARTICLES_FOLDER}/${article.markdown}`} />}</Col>\n          </Row>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    setSelectedArticle: (article) => dispatch(articlesSetSelected(article)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\n"],"sourceRoot":""}