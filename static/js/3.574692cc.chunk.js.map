{"version":3,"sources":["../node_modules/lodash/slice.js","../node_modules/lodash/_isIterateeCall.js","services/NewsService/selectors.ts","pages/Home.jsx"],"names":["baseSlice","require","isIterateeCall","toInteger","module","exports","array","start","end","length","undefined","eq","isArrayLike","isIndex","isObject","value","index","object","type","getNews","state","newsServiceReducer","news","connect","articles","getArticles","featuredArticle","findFeaturedArticle","useState","newsPage","setNewsPage","newsPageStart","NEWS_PAGINATION","newsPageEnd","Container","className","Helmet","Row","Col","lg","map","slice","n","renderPagination","article","withFeatured"],"mappings":"+HAAA,IAAIA,EAAYC,EAAQ,KACpBC,EAAiBD,EAAQ,KACzBE,EAAYF,EAAQ,KAkCxBG,EAAOC,QAhBP,SAAeC,EAAOC,EAAOC,GAC3B,IAAIC,EAAkB,MAATH,EAAgB,EAAIA,EAAMG,OACvC,OAAKA,GAGDD,GAAqB,iBAAPA,GAAmBN,EAAeI,EAAOC,EAAOC,IAChED,EAAQ,EACRC,EAAMC,IAGNF,EAAiB,MAATA,EAAgB,EAAIJ,EAAUI,GACtCC,OAAcE,IAARF,EAAoBC,EAASN,EAAUK,IAExCR,EAAUM,EAAOC,EAAOC,IAVtB,K,oBCvBX,IAAIG,EAAKV,EAAQ,KACbW,EAAcX,EAAQ,IACtBY,EAAUZ,EAAQ,KAClBa,EAAWb,EAAQ,KA0BvBG,EAAOC,QAdP,SAAwBU,EAAOC,EAAOC,GACpC,IAAKH,EAASG,GACZ,OAAO,EAET,IAAIC,SAAcF,EAClB,SAAY,UAARE,EACKN,EAAYK,IAAWJ,EAAQG,EAAOC,EAAOR,QACrC,UAARS,GAAoBF,KAASC,IAE7BN,EAAGM,EAAOD,GAAQD,K,gHCpBhBI,EAAU,SAACC,GAAD,OAAkBA,EAAMC,mBAAmBC,M,qFC6CnDC,uBAPS,SAACH,GACvB,MAAO,CACLI,SAAUC,YAAYL,GACtBE,KAAMH,EAAQC,MAIHG,EApCF,SAAC,GAAwB,IAAtBD,EAAqB,EAArBA,KAAME,EAAe,EAAfA,SACdE,EAAkBC,YAAoBH,GADT,EAEHI,mBAAS,GAFN,mBAE5BC,EAF4B,KAElBC,EAFkB,KAI7BC,GAAiBF,EAAW,GAAKG,IACjCC,GAAeJ,EAAW,GAAKG,IAAkBA,IAEvD,OACE,eAACE,EAAA,EAAD,CAAWC,UAAU,iBAArB,UACE,cAACC,EAAA,EAAD,UACE,2CAEF,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAKC,GAAI,EAAT,SACE,eAAC,IAAD,WACGC,IAAIC,IAAMnB,EAAMS,EAAeE,IAAc,SAACS,EAAG1B,GAAJ,OAC5C,cAAC,IAAD,CAAkBM,KAAMoB,GAAb1B,MAEZ2B,YAAiBrB,EAAMU,IAAiBH,EAAUC,QAGvD,cAACQ,EAAA,EAAD,CAAKC,GAAI,EAAT,SACGb,GAAmB,cAAC,IAAD,CAAakB,QAASlB,EAAiBmB,cAAY","file":"static/js/3.574692cc.chunk.js","sourcesContent":["var baseSlice = require('./_baseSlice'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toInteger = require('./toInteger');\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  }\n  else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\n\nmodule.exports = slice;\n","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nmodule.exports = isIterateeCall;\n","import { State } from '../index';\n\nexport const isFetching = (state: State) => state.newsServiceReducer.isFetching;\nexport const getError = (state: State) => state.newsServiceReducer.error;\nexport const getNews = (state: State) => state.newsServiceReducer.news;\n","import React, { useState } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport { getNews } from '../services/NewsService/selectors';\nimport map from 'lodash/map';\nimport slice from 'lodash/slice';\nimport FadeIn from 'react-fade-in';\nimport { ArticleCard, News } from '../components';\nimport { findFeaturedArticle, renderPagination } from '../utils';\nimport { NEWS_PAGINATION } from '../constants';\n\nconst Home = ({ news, articles }) => {\n  const featuredArticle = findFeaturedArticle(articles);\n  const [newsPage, setNewsPage] = useState(1);\n\n  const newsPageStart = (newsPage - 1) * NEWS_PAGINATION;\n  const newsPageEnd = (newsPage - 1) * NEWS_PAGINATION + NEWS_PAGINATION;\n\n  return (\n    <Container className=\"page page-home\">\n      <Helmet>\n        <title>Home</title>\n      </Helmet>\n      <Row>\n        <Col lg={8}>\n          <FadeIn>\n            {map(slice(news, newsPageStart, newsPageEnd), (n, index) => (\n              <News key={index} news={n} />\n            ))}\n            {renderPagination(news, NEWS_PAGINATION, newsPage, setNewsPage)}\n          </FadeIn>\n        </Col>\n        <Col lg={4}>\n          {featuredArticle && <ArticleCard article={featuredArticle} withFeatured />}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n    news: getNews(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Home);\n"],"sourceRoot":""}