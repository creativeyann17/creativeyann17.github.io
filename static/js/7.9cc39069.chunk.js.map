{"version":3,"sources":["services/ArticlesService/selectors.ts","components/ArticleDetails.jsx","components/CodeBlock.jsx","components/Markdown.jsx","components/SocialIcons.jsx","pages/Article.jsx"],"names":["getArticles","state","articlesServiceReducer","articles","ArticleDetails","article","className","date","externalLink","repository","time","CodeBlock","this","props","language","value","style","duotoneSea","PureComponent","defaultProps","Markdown","text","fetch","source","then","response","setState","renderers","code","Component","SocialIcons","url","buildArticleUrl","links","buttonStyle","width","height","margin","backgroundColor","borderRadius","iconStyle","color","openNewTab","connect","id","useParams","useState","timeout","setstate","find","toString","useEffect","timeoutTimer","setTimeout","clearTimeout","Container","Row","Col","sm","description","alt","src","THUMBAILS_FOLDER","thumbnail","ARTICLES_FOLDER","markdown","Alert","variant","Spinner","animation","size"],"mappings":"4IAEA,kCAAO,IACMA,EAAc,SAACC,GAAD,OAAkBA,EAAMC,uBAAuBC,W,iCCH1E,0CAyBeC,IAlBQ,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACxB,OACE,sBAAKC,UAAU,kBAAf,UACE,uBAAMA,UAAU,YAAhB,UACE,cAAC,IAAD,IADF,IACgBD,EAAQE,QAExB,uBAAMD,UAAU,YAAhB,UACE,cAAC,IAAD,IACCE,YAAaH,EAAQI,WAAY,cAEpC,uBAAMH,UAAU,YAAhB,UACE,cAAC,IAAD,IADF,UAEMD,EAAQK,KAFd,gB,yOCXAC,E,4JAUJ,WAAU,IAAD,EACqBC,KAAKC,MAAzBC,EADD,EACCA,SAAUC,EADX,EACWA,MAClB,OACE,cAAC,IAAD,CAAmBD,SAAUA,EAAUE,MAAOC,IAA9C,SACGF,Q,GAdeG,iBAAlBP,EAMGQ,aAAe,CACpBL,SAAU,MAaCH,QCUAS,E,kDA7Bb,WAAYP,GAAQ,IAAD,8BACjB,cAAMA,IACDZ,MAAQ,CAAEoB,KAAM,MAFJ,E,qDAKnB,WAAqB,IAAD,OAClBC,MAAMV,KAAKC,MAAMU,QACdC,MAAK,SAACC,GACL,OAAOA,EAASJ,UAEjBG,MAAK,SAACH,GACL,EAAKK,SAAS,CAAEL,c,oBAItB,WAAU,IACAA,EAAST,KAAKX,MAAdoB,KACR,OACE,qBAAKf,UAAU,WAAf,SACGe,GAAQ,cAAC,IAAD,CAAeE,OAAQF,EAAMM,UAAW,CAAEC,KAAMjB,W,GApB1CkB,a,mCCuBRC,EAvBK,SAAC,GAAiB,IAAfzB,EAAc,EAAdA,QACf0B,EAAMC,YAAgB3B,GAC5B,OACE,cAAC,IAAD,CACE4B,MAAO,CACL,yCAA2CF,EAC3C,2BACA,uCACA,uDAAyDA,GAE3DG,YAAa,CACXC,MAAO,OACPC,OAAQ,OACRC,OAAQ,WACRC,gBAAiB,UACjBC,aAAc,OAEhBC,UAAW,CAAEC,MAAO,WACpBC,YAAY,K,QC0CHC,uBANS,SAAC1C,GACvB,MAAO,CACLE,SAAUH,YAAYC,MAIX0C,EAvDC,SAAC,GAAkB,IAAhBxC,EAAe,EAAfA,SACTyC,EAAOC,cAAPD,GADwB,EAENE,mBAAS,CAAEC,SAAS,IAFd,mBAEzB9C,EAFyB,KAElB+C,EAFkB,KAI1B3C,EAAU4C,IAAK9C,GAAU,SAACE,GAAD,OAAaA,EAAQuC,GAAGM,aAAeN,KAStE,OAPAO,qBAAU,WACR,IAAIC,EAAeC,YAAW,kBAAML,EAAS,2BAAK/C,GAAN,IAAa8C,SAAS,OAAS,KAC3E,OAAO,WACLO,aAAaF,OAKf,cAACG,EAAA,EAAD,CAAWjD,UAAU,OAArB,SACID,EAaA,cAACmD,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAI,GAAT,UACE,6BAAKrD,EAAQsD,cACb,sBAAKrD,UAAU,gBAAf,UACE,cAACF,EAAA,EAAD,CAAgBC,QAASA,IACzB,cAAC,EAAD,CAAaA,QAASA,OAExB,qBACEC,UAAU,QACVsD,IAAI,GACJC,IAAG,UAAKC,IAAL,YAAyBzD,EAAQ0D,WACpC5B,MAAO,SAER,cAAC,EAAD,CAAUZ,OAAM,UAAKyC,IAAL,YAAwB3D,EAAQ4D,iBAzBrD,8BACGhE,EAAM8C,QACL,eAACmB,EAAA,EAAD,CAAOC,QAAQ,SAAf,UACE,mDADF,IAC6BvB,KAG7B,eAACsB,EAAA,EAAD,CAAOC,QAAQ,YAAf,UACE,qDADF,IAC+BvB,EAD/B,IACmC,cAACwB,EAAA,EAAD,CAASC,UAAU,SAASC,KAAK","file":"static/js/7.9cc39069.chunk.js","sourcesContent":["import { State } from '../index';\n\nexport const isFetching = (state: State) => state.articlesServiceReducer.isFetching;\nexport const getArticles = (state: State) => state.articlesServiceReducer.articles;\n","import React from 'react';\nimport { MdUpdate, MdTimer } from 'react-icons/md';\nimport { BiGitRepoForked } from 'react-icons/bi';\nimport { externalLink } from '../utils/utils';\n\n// https://react-icons.github.io/react-icons/search?q=top\n\nconst ArticleDetails = ({ article }) => {\n  return (\n    <div className=\"article-details\">\n      <span className=\"attribute\">\n        <MdUpdate /> {article.date}\n      </span>\n      <span className=\"attribute\">\n        <BiGitRepoForked />\n        {externalLink(article.repository, 'sources')}\n      </span>\n      <span className=\"attribute\">\n        <MdTimer />\n        {`${article.time} min`}\n      </span>\n    </div>\n  );\n};\n\nexport default ArticleDetails;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\n// https://github.com/react-syntax-highlighter/react-syntax-highlighter/blob/master/AVAILABLE_STYLES_PRISM.MD\nimport { duotoneSea } from 'react-syntax-highlighter/dist/esm/styles/prism';\n\nclass CodeBlock extends PureComponent {\n  static propTypes = {\n    value: PropTypes.string.isRequired,\n    language: PropTypes.string,\n  };\n\n  static defaultProps = {\n    language: null,\n  };\n\n  render() {\n    const { language, value } = this.props;\n    return (\n      <SyntaxHighlighter language={language} style={duotoneSea}>\n        {value}\n      </SyntaxHighlighter>\n    );\n  }\n}\n\nexport default CodeBlock;\n","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport PropTypes from 'prop-types';\nimport CodeBlock from './CodeBlock';\n\n// using component for fun :)\nclass Markdown extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { text: null };\n  }\n\n  componentDidMount() {\n    fetch(this.props.source)\n      .then((response) => {\n        return response.text();\n      })\n      .then((text) => {\n        this.setState({ text });\n      });\n  }\n\n  render() {\n    const { text } = this.state;\n    return (\n      <div className=\"markdown\">\n        {text && <ReactMarkdown source={text} renderers={{ code: CodeBlock }} />}\n      </div>\n    );\n  }\n}\n\nMarkdown.propTypes = {\n  source: PropTypes.string.isRequired,\n};\n\nexport default Markdown;\n","// https://react-social-media-buttons.vercel.app/\n\nimport React from 'react';\nimport SocialMediaButtons from 'react-social-media-buttons';\nimport { buildArticleUrl } from '../utils/utils';\n\nconst SocialIcons = ({ article }) => {\n  const url = buildArticleUrl(article);\n  return (\n    <SocialMediaButtons\n      links={[\n        'https://www.facebook.com/sharer.php?u=' + url,\n        'https://twitter.com/home', // TODO\n        'https://www.instagram.com/instagram/', // TODO\n        'https://www.linkedin.com/shareArticle?mini=true&url=' + url,\n      ]}\n      buttonStyle={{\n        width: '25px',\n        height: '25px',\n        margin: '0px 10px',\n        backgroundColor: '#4682b4',\n        borderRadius: '50%',\n      }}\n      iconStyle={{ color: '#ffffff' }}\n      openNewTab={true}\n    />\n  );\n};\n\nexport default SocialIcons;\n","import React, { useState, useEffect } from 'react';\nimport { Container, Col, Row, Spinner, Alert } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport find from 'lodash/find';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport Markdown from '../components/Markdown';\nimport ArticleDetails from '../components/ArticleDetails';\nimport SocialIcons from '../components/SocialIcons';\nimport { ARTICLES_FOLDER, THUMBAILS_FOLDER } from '../constants';\n\nconst Article = ({ articles }) => {\n  const { id } = useParams();\n  const [state, setstate] = useState({ timeout: false });\n\n  const article = find(articles, (article) => article.id.toString() === id); // number != string\n\n  useEffect(() => {\n    let timeoutTimer = setTimeout(() => setstate({ ...state, timeout: true }), 2 * 1000);\n    return () => {\n      clearTimeout(timeoutTimer);\n    };\n  });\n\n  return (\n    <Container className=\"page\">\n      {!article ? (\n        <div>\n          {state.timeout ? (\n            <Alert variant=\"danger\">\n              <b>Article not found:</b> {id}\n            </Alert>\n          ) : (\n            <Alert variant=\"secondary\">\n              <b>Looking for article:</b> {id} <Spinner animation=\"border\" size=\"sm\" />\n            </Alert>\n          )}\n        </div>\n      ) : (\n        <Row>\n          <Col sm={12}>\n            <h1>{article.description}</h1>\n            <div className=\"space-between\">\n              <ArticleDetails article={article} />\n              <SocialIcons article={article} />\n            </div>\n            <img\n              className=\"title\"\n              alt=\"\"\n              src={`${THUMBAILS_FOLDER}/${article.thumbnail}`}\n              width={'100%'}\n            />\n            {<Markdown source={`${ARTICLES_FOLDER}/${article.markdown}`} />}\n          </Col>\n        </Row>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Article);\n"],"sourceRoot":""}