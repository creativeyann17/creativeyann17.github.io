{"version":3,"sources":["pages/Article.jsx"],"names":["connect","state","articles","getArticles","id","useParams","useState","timeout","setState","article","find","toString","useEffect","timeoutTimer","setTimeout","GLOBAL_REQUEST_TIMEOUT","clearTimeout","thumbnailUrl","THUMBNAILS_FOLDER","thumbnail","className","replace","RegExp","name","property","content","description","lg","alt","src","width","height","source","ARTICLES_FOLDER","markdown","variant","animation","size"],"mappings":"uUAmFeA,uBANS,SAACC,GACvB,MAAO,CACLC,SAAUC,YAAYF,MAIXD,EAtEC,SAAC,GAAkB,IAAhBE,EAAe,EAAfA,SACTE,EAAOC,cAAPD,GADwB,EAENE,mBAAS,CAAEC,SAAS,IAFd,mBAEzBN,EAFyB,KAElBO,EAFkB,KAI1BC,EAAUC,IAAKR,GAAU,SAACO,GAAD,OAAaA,EAAQL,GAAGO,aAAeP,KAEtEQ,qBAAU,WACR,IAAIC,EAAeC,YACjB,kBAAMN,EAAS,2BAAKP,GAAN,IAAaM,SAAS,OACX,IAAzBQ,KAEF,OAAO,WACLC,aAAaH,OAIjB,IAAMI,EAAeR,EAAO,UAAMS,IAAN,YAA2BT,EAAQU,WAAc,GAE7E,OACE,cAAC,IAAD,CAAWC,UAAU,oBAArB,SACIX,EAaA,gCACE,eAAC,IAAD,WACE,gCAAQY,IAAQZ,EAAQL,GAAI,IAAIkB,OAAO,IAAK,KAAM,OAClD,sBAAMC,KAAK,QAAQC,SAAS,WAAWC,QAASR,IAChD,sBAAMM,KAAK,cAAcC,SAAS,iBAAiBC,QAAShB,EAAQiB,iBAEtE,eAAC,IAAD,WACE,eAAC,IAAD,CAAKC,GAAI,EAAT,UACE,eAAC,IAAD,WACE,qBACEP,UAAU,OACVQ,IAAKnB,EAAQU,UACbU,IAAKZ,EACLa,MAAO,OACPC,OAAQ,SAEV,sBAAKX,UAAU,kCAAf,UACE,cAAC,IAAD,CAAgBX,QAASA,IACzB,cAAC,IAAD,CAAaA,QAASA,UAG1B,cAAC,IAAD,OAEF,cAAC,IAAD,CAAKkB,GAAI,EAAT,SAAa,cAAC,IAAD,CAAUK,OAAM,UAAKC,IAAL,YAAwBxB,EAAQyB,oBAnCjE,8BACGjC,EAAMM,QACL,eAAC,IAAD,CAAO4B,QAAQ,UAAf,UACE,mDADF,IAC6B/B,KAG7B,eAAC,IAAD,CAAO+B,QAAQ,QAAf,UACE,qDADF,IAC+B/B,EAD/B,IACmC,cAAC,IAAD,CAASgC,UAAU,SAASC,KAAK","file":"static/js/5.8153b9cc.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Container, Spinner, Alert, Row, Col } from 'react-bootstrap';\nimport { useParams } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport find from 'lodash/find';\nimport { Helmet } from 'react-helmet';\nimport FadeIn from 'react-fade-in';\nimport replace from 'lodash/replace';\nimport { TableOfContents } from '../components';\nimport { getArticles } from '../services/ArticlesService/selectors';\nimport { Markdown, ArticleDetails, SocialIcons } from '../components';\nimport { ARTICLES_FOLDER, THUMBNAILS_FOLDER, GLOBAL_REQUEST_TIMEOUT } from '../constants';\n\nconst Article = ({ articles }) => {\n  const { id } = useParams();\n  const [state, setState] = useState({ timeout: false });\n\n  const article = find(articles, (article) => article.id.toString() === id); // number != string\n\n  useEffect(() => {\n    let timeoutTimer = setTimeout(\n      () => setState({ ...state, timeout: true }),\n      GLOBAL_REQUEST_TIMEOUT * 1000\n    );\n    return () => {\n      clearTimeout(timeoutTimer);\n    };\n  });\n\n  const thumbnailUrl = article ? `${THUMBNAILS_FOLDER}/${article.thumbnail}` : '';\n\n  return (\n    <Container className=\"page page-article\">\n      {!article ? (\n        <div>\n          {state.timeout ? (\n            <Alert variant=\"warning\">\n              <b>Article not found:</b> {id}\n            </Alert>\n          ) : (\n            <Alert variant=\"light\">\n              <b>Looking for article:</b> {id} <Spinner animation=\"border\" size=\"sm\" />\n            </Alert>\n          )}\n        </div>\n      ) : (\n        <div>\n          <Helmet>\n            <title>{replace(article.id, new RegExp('-', 'g'), ' ')}</title>\n            <meta name=\"image\" property=\"og:image\" content={thumbnailUrl} />\n            <meta name=\"description\" property=\"og:description\" content={article.description} />\n          </Helmet>\n          <Row>\n            <Col lg={3}>\n              <FadeIn>\n                <img\n                  className=\"mb-3\"\n                  alt={article.thumbnail}\n                  src={thumbnailUrl}\n                  width={'100%'}\n                  height={'auto'}\n                />\n                <div className=\"d-flex justify-content-between \">\n                  <ArticleDetails article={article} />\n                  <SocialIcons article={article} />\n                </div>\n              </FadeIn>\n              <TableOfContents />\n            </Col>\n            <Col lg={9}>{<Markdown source={`${ARTICLES_FOLDER}/${article.markdown}`} />}</Col>\n          </Row>\n        </div>\n      )}\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    articles: getArticles(state),\n  };\n};\n\nexport default connect(mapStateToProps)(Article);\n"],"sourceRoot":""}